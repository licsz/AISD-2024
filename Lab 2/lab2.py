#Написать программу, которая читая символы из бесконечной последовательности (эмулируется конечным файлом, читающимся поблочно),
#распознает, преобразует и выводит на экран лексемы по определенному правилу. Лексемы разделены пробелами. Преобразование делать
#по возможности через словарь. Для упрощения под выводом числа прописью подразумевается последовательный вывод всех цифр числа.
#Вариант 27.
#Шеснадцатиричные нечетные числа, не превышающие 409610 и содержащие более К цифр.
#Вывести числа и их количество. Минимальное число вывести прописью.
import re
k = 2
# Открываем файл для чтения
with open('text.txt', 'r') as file:
    # Читаем содержимое файла
    text = file.read()
# Регулярное выражение для поиска шестнадцатеричных чисел
pattern = r'\b[0-9a-fA-F]+\b'
# Поиск шестнадцатеричных чисел в тексте файла
hex_numbers = re.findall(pattern, text)
# Вывод найденных шестнадцатеричных чисел
print("Найденные шестнадцатеричные числа:\n", hex_numbers)
mas_dict = {}
for i in hex_numbers:
    if int(i, 16) % 2 == 1 and int(i, 16) <= 4096 and len(i) > k:
        mas_dict[i] = mas_dict.get(i, 0)+1
print("Найденные шестнадцатеричные числа подходящие условию:\n",mas_dict)
print('минимальное число = ', min(mas_dict.keys(), key=lambda x: int(x, 16)))